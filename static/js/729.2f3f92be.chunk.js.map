{"version":3,"file":"static/js/729.2f3f92be.chunk.js","mappings":"8MAsEA,UA3DqB,WAAO,IAAD,EACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,MAElDC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAYZ,GAASa,MAAK,SAAAC,GAAG,OAAIV,EAAYU,EAAhB,GAG9B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACf,IAEJ,IAAIkB,EAAS,GAMb,OAFOA,EAHFf,EAASgB,YAGD,0CAAsChB,EAASgB,aADxD,iKAIF,iCACE,SAAC,KAAD,CAAMC,GAAIb,EAAWc,QAArB,8BACEC,EAAAA,EAAAA,SAAQnB,KACR,iCACE,4BACE,gBAAKoB,IAAKL,EAAQM,IAAI,SAASC,MAAM,WACrC,4BACE,0BACGtB,EAASuB,MADZ,KACqBvB,EAASwB,aAAaC,MAAM,EAAG,GADpD,QAGA,wCAAgBC,KAAKC,MAA8B,GAAxB3B,EAAS4B,cAAqB,QACzD,qCACA,uBAAI5B,EAAS6B,YACb,mCACA,uBAAI7B,EAAS8B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGtD,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASjB,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAIJ,SAAC,KAAD,YAMX,C","sources":["pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getFilmById } from 'services/api';\nimport { useEffect, useRef, useState } from 'react';\nimport { isEmpty } from 'lodash';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [filmInfo, setFilmInfo] = useState({});\n\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    try {\n      getFilmById(movieId).then(res => setFilmInfo(res));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  let source = '';\n  if (!filmInfo.poster_path) {\n    source =\n      'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  } else source = `https://image.tmdb.org/t/p/w500/${filmInfo.poster_path}`;\n\n  return (\n    <>\n      <Link to={goBackHref.current}>Go back ‚Üê</Link>\n      {!isEmpty(filmInfo) && (\n        <>\n          <div>\n            <img src={source} alt=\"poster\" width=\"300px\" />\n            <div>\n              <h1>\n                {filmInfo.title} ({filmInfo.release_date.slice(0, 4)})\n              </h1>\n              <p>User score: {Math.round(filmInfo.vote_average * 10) + '%'}</p>\n              <b>Overview</b>\n              <p>{filmInfo.overview}</p>\n              <b>Genres</b>\n              <p>{filmInfo.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n          <div>\n            <b>Additional information</b>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n\n            <Outlet />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","goBackHref","useRef","state","from","useEffect","getFilmById","then","res","error","console","log","source","poster_path","to","current","isEmpty","src","alt","width","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join"],"sourceRoot":""}