{"version":3,"file":"static/js/490.a6e2aaec.chunk.js","mappings":"sMAuCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,EAAeI,EAAIC,QAAvB,GAGlC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACV,KAGF,+BACGa,EAAAA,EAAAA,SAAQV,IACP,qEAEA,wBACGA,EAAYW,KAAI,SAAAC,GACf,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAKV,C","sources":["pages/Movies/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { isEmpty } from 'lodash';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [filmReviews, setFilmReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(res => setFilmReviews(res.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isEmpty(filmReviews) ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {filmReviews.map(review => {\n            return (\n              <li key={review.id}>\n                <b>{review.author}</b>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","filmReviews","setFilmReviews","useEffect","getMovieReviews","then","res","results","error","console","log","isEmpty","map","review","author","content","id"],"sourceRoot":""}