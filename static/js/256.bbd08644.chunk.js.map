{"version":3,"file":"static/js/256.bbd08644.chunk.js","mappings":"gRAGaA,EAAmBC,EAAAA,GAAAA,IAAH,4DAKhBC,EAAmBD,EAAAA,GAAAA,IAAH,gDAIhBE,EAAcF,EAAAA,GAAAA,GAAH,0CAIXG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,4HASVK,EAAcL,EAAAA,GAAAA,GAAH,0C,SC+DxB,EA3EqB,WAAO,IAAD,EACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,MAElDC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAYZ,GAASa,MAAK,SAAAC,GAAG,OAAIV,EAAYU,EAAhB,GAG9B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACf,IAEJ,IAAIkB,EAAS,GAMb,OAFOA,EAHFf,EAASgB,YAGD,0CAAsChB,EAASgB,aADxD,iKAIF,UAACC,EAAA,EAAD,YACE,SAAC,KAAD,CAAMC,GAAId,EAAWe,QAArB,8BACEC,EAAAA,EAAAA,SAAQpB,KACR,iCACE,UAACV,EAAD,YACE,gBAAK+B,IAAKN,EAAQO,IAAI,SAASC,MAAM,WACrC,UAAC/B,EAAD,YACE,0BACGQ,EAASwB,MAETxB,EAASyB,eACR,kBACEC,MAAO,CACLC,QAAS,WACTC,MAAO,WAHX,cAMI5B,EAASyB,aAAaI,MAAM,EAAG,GANnC,WAWJ,wCAAgBC,KAAKC,MAA8B,GAAxB/B,EAASgC,cAAqB,QACzD,qCACA,uBAAIhC,EAASiC,YACb,mCACA,uBACGjC,EAASkC,OAAOC,OAAS,EACtBnC,EAASkC,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC9C,uCAIV,4BACE,oDACA,UAAC9C,EAAD,YACE,SAACG,EAAD,WACE,SAACF,EAAD,CAAYwB,GAAG,OAAf,qBAEF,SAACtB,EAAD,WACE,SAACF,EAAD,CAAYwB,GAAG,UAAf,2BAIJ,SAAC,KAAD,YAMX,C","sources":["pages/Movies/MovieDetails/MovieDetails.styled.jsx","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  padding: 100px 50px;\n`;\n\nexport const SubMenuList = styled.ul`\n  display: flex;\n`;\n\nexport const SubNavLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #001a00;\n  &.active {\n    color: #a01d1d;\n  }\n`;\n\nexport const SubMenuItem = styled.li`\n  padding: 10px;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilmById } from 'services/api';\nimport { useEffect, useRef, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { Container } from 'components/Container/Container';\nimport {\n  MovieInfoWrapper,\n  MovieTextWrapper,\n  SubMenuItem,\n  SubMenuList,\n  SubNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [filmInfo, setFilmInfo] = useState({});\n\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    try {\n      getFilmById(movieId).then(res => setFilmInfo(res));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  let source = '';\n  if (!filmInfo.poster_path) {\n    source =\n      'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  } else source = `https://image.tmdb.org/t/p/w500/${filmInfo.poster_path}`;\n\n  return (\n    <Container>\n      <Link to={goBackHref.current}>Go back ‚Üê</Link>\n      {!isEmpty(filmInfo) && (\n        <>\n          <MovieInfoWrapper>\n            <img src={source} alt=\"poster\" width=\"300px\" />\n            <MovieTextWrapper>\n              <h1>\n                {filmInfo.title}\n\n                {filmInfo.release_date && (\n                  <span\n                    style={{\n                      padding: '0px 10px',\n                      color: '#a01d1d',\n                    }}\n                  >\n                    ({filmInfo.release_date.slice(0, 4)})\n                  </span>\n                )}\n              </h1>\n\n              <p>User score: {Math.round(filmInfo.vote_average * 10) + '%'}</p>\n              <b>Overview</b>\n              <p>{filmInfo.overview}</p>\n              <b>Genres</b>\n              <p>\n                {filmInfo.genres.length > 0\n                  ? filmInfo.genres.map(genre => genre.name).join(', ')\n                  : 'No information about genres'}\n              </p>\n            </MovieTextWrapper>\n          </MovieInfoWrapper>\n          <div>\n            <h2>Additional information</h2>\n            <SubMenuList>\n              <SubMenuItem>\n                <SubNavLink to=\"cast\">Cast</SubNavLink>\n              </SubMenuItem>\n              <SubMenuItem>\n                <SubNavLink to=\"reviews\">Reviews</SubNavLink>\n              </SubMenuItem>\n            </SubMenuList>\n\n            <Outlet />\n          </div>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieInfoWrapper","styled","MovieTextWrapper","SubMenuList","SubNavLink","NavLink","SubMenuItem","movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","goBackHref","useRef","state","from","useEffect","getFilmById","then","res","error","console","log","source","poster_path","Container","to","current","isEmpty","src","alt","width","title","release_date","style","padding","color","slice","Math","round","vote_average","overview","genres","length","map","genre","name","join"],"sourceRoot":""}